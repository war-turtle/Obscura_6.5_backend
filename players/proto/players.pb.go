// Code generated by protoc-gen-go. DO NOT EDIT.
// source: players.proto

package pbPlayers

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PlayerRequest struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayerRequest) Reset()         { *m = PlayerRequest{} }
func (m *PlayerRequest) String() string { return proto.CompactTextString(m) }
func (*PlayerRequest) ProtoMessage()    {}
func (*PlayerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c5ab527c5a576078, []int{0}
}

func (m *PlayerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayerRequest.Unmarshal(m, b)
}
func (m *PlayerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayerRequest.Marshal(b, m, deterministic)
}
func (m *PlayerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerRequest.Merge(m, src)
}
func (m *PlayerRequest) XXX_Size() int {
	return xxx_messageInfo_PlayerRequest.Size(m)
}
func (m *PlayerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerRequest proto.InternalMessageInfo

func (m *PlayerRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type PlayerResponse struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayerResponse) Reset()         { *m = PlayerResponse{} }
func (m *PlayerResponse) String() string { return proto.CompactTextString(m) }
func (*PlayerResponse) ProtoMessage()    {}
func (*PlayerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c5ab527c5a576078, []int{1}
}

func (m *PlayerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayerResponse.Unmarshal(m, b)
}
func (m *PlayerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayerResponse.Marshal(b, m, deterministic)
}
func (m *PlayerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerResponse.Merge(m, src)
}
func (m *PlayerResponse) XXX_Size() int {
	return xxx_messageInfo_PlayerResponse.Size(m)
}
func (m *PlayerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerResponse proto.InternalMessageInfo

func (m *PlayerResponse) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func init() {
	proto.RegisterType((*PlayerRequest)(nil), "players.PlayerRequest")
	proto.RegisterType((*PlayerResponse)(nil), "players.PlayerResponse")
}

func init() { proto.RegisterFile("players.proto", fileDescriptor_c5ab527c5a576078) }

var fileDescriptor_c5ab527c5a576078 = []byte{
	// 131 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2d, 0xc8, 0x49, 0xac,
	0x4c, 0x2d, 0x2a, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x87, 0x72, 0x95, 0xe4, 0xb9,
	0x78, 0x03, 0xc0, 0xcc, 0xa0, 0xd4, 0xc2, 0xd2, 0xd4, 0xe2, 0x12, 0x21, 0x3e, 0x2e, 0xa6, 0xcc,
	0x14, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xd6, 0x20, 0xa6, 0xcc, 0x14, 0x25, 0x05, 0x2e, 0x3e, 0x98,
	0x82, 0xe2, 0x82, 0xfc, 0xbc, 0xe2, 0x54, 0x74, 0x15, 0x46, 0x9e, 0x5c, 0x6c, 0x10, 0x15, 0x42,
	0xf6, 0x5c, 0x5c, 0xee, 0xa9, 0x25, 0x10, 0x4e, 0xb1, 0x90, 0x98, 0x1e, 0xcc, 0x4e, 0x14, 0x1b,
	0xa4, 0xc4, 0x31, 0xc4, 0x21, 0x06, 0x2b, 0x31, 0x38, 0x71, 0x47, 0x71, 0x16, 0x24, 0x41, 0xf5,
	0x27, 0xb1, 0x81, 0x9d, 0x6a, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0xef, 0x85, 0x82, 0x57, 0xbb,
	0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PlayerClient is the client API for Player service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PlayerClient interface {
	GetPlayers(ctx context.Context, in *PlayerRequest, opts ...grpc.CallOption) (*PlayerResponse, error)
}

type playerClient struct {
	cc *grpc.ClientConn
}

func NewPlayerClient(cc *grpc.ClientConn) PlayerClient {
	return &playerClient{cc}
}

func (c *playerClient) GetPlayers(ctx context.Context, in *PlayerRequest, opts ...grpc.CallOption) (*PlayerResponse, error) {
	out := new(PlayerResponse)
	err := c.cc.Invoke(ctx, "/players.Player/GetPlayers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PlayerServer is the server API for Player service.
type PlayerServer interface {
	GetPlayers(context.Context, *PlayerRequest) (*PlayerResponse, error)
}

// UnimplementedPlayerServer can be embedded to have forward compatible implementations.
type UnimplementedPlayerServer struct {
}

func (*UnimplementedPlayerServer) GetPlayers(ctx context.Context, req *PlayerRequest) (*PlayerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPlayers not implemented")
}

func RegisterPlayerServer(s *grpc.Server, srv PlayerServer) {
	s.RegisterService(&_Player_serviceDesc, srv)
}

func _Player_GetPlayers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PlayerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlayerServer).GetPlayers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/players.Player/GetPlayers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlayerServer).GetPlayers(ctx, req.(*PlayerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Player_serviceDesc = grpc.ServiceDesc{
	ServiceName: "players.Player",
	HandlerType: (*PlayerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetPlayers",
			Handler:    _Player_GetPlayers_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "players.proto",
}
